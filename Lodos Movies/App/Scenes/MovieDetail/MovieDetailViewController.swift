//
//  MovieDetailViewController.swift
//  Lodos Movies
//
//  Created by TuÄŸrul on 15.03.2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailDisplayLogic: AnyObject {
    func displayInitializeResult(viewModel: MovieDetail.Initialize.ViewModel)
    func displayReloadResult(viewModel: MovieDetail.Reload.ViewModel)
    func displayFinalizeResult(viewModel: MovieDetail.Finalize.ViewModel)
}

class MovieDetailViewController: BaseViewController, MovieDetailDisplayLogic {
    var interactor: MovieDetailBusinessLogic?
    var router: (NSObjectProtocol & MovieDetailRoutingLogic & MovieDetailDataPassing)?

    override func viewDidLoad() {
        
        super.viewDidLoad()
    }
    
    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: - Setup Clean Code Design Pattern 

    private func setup() {
        let viewController = self
        let interactor = MovieDetailInteractor()
        let presenter = MovieDetailPresenter()
        let router = MovieDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: - Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

}

// MARK: - Display Logic

extension MovieDetailViewController {
    
    func displayInitializeResult(viewModel: MovieDetail.Initialize.ViewModel) { }

    func displayReloadResult(viewModel: MovieDetail.Reload.ViewModel) { }

    func displayFinalizeResult(viewModel: MovieDetail.Finalize.ViewModel) { }
}
