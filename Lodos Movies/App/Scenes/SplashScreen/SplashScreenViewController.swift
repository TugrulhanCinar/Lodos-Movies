//
//  SplashScreenViewController.swift
//  Lodos Movies
//
//  Created by TuÄŸrul on 13.03.2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SplashScreenDisplayLogic: AnyObject {
    func displayInitializeResult(viewModel: SplashScreen.Initialize.ViewModel)
    func displayReloadResult(viewModel: SplashScreen.Reload.ViewModel)
    func displayFinalizeResult(viewModel: SplashScreen.Finalize.ViewModel)
}

class SplashScreenViewController: BaseViewController, SplashScreenDisplayLogic {
    
    var interactor: SplashScreenBusinessLogic?
    var router: (NSObjectProtocol & SplashScreenRoutingLogic & SplashScreenDataPassing)?

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
        interactor?.initialize(request: SplashScreen.Initialize.Request())
        interactor?.reload(request: SplashScreen.Reload.Request())
    }
    
    // MARK: - Setup Clean Code Design Pattern

    private func setup() {
        let viewController = self
        let interactor = SplashScreenInteractor()
        let presenter = SplashScreenPresenter()
        let router = SplashScreenRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: - Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
                }
            }
        }
    }
    
    // MARK: - Display Logic

    extension SplashScreenViewController {

        func displayInitializeResult(viewModel: SplashScreen.Initialize.ViewModel) { 
            
            if viewModel.isConnection {
                
            } else {
                
            }
        }

        func displayReloadResult(viewModel: SplashScreen.Reload.ViewModel) { }

        func displayFinalizeResult(viewModel: SplashScreen.Finalize.ViewModel) { }
    }
