//
//  MainPageViewController.swift
//  Lodos Movies
//
//  Created by Tuğrul on 13.03.2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
// toplu aramak için: https://www.omdbapi.com/?s=God+father&apikey=8217f5d4 // https://www.omdbapi.com/?s={txt}&apikey=8217f5d4

// title üzerinden tekli aramak için: https://www.omdbapi.com/?t=God+father+&apikey=8217f5d4 // https://www.omdbapi.com/?t={txt}&apikey=8217f5d4

// id üzerinden aratmak için = http://www.omdbapi.com/?i=tt12994556&apikey=8217f5d4

protocol MainPageDisplayLogic: AnyObject {

    func displayInitializeResult(viewModel: MainPage.Initialize.ViewModel)
    func displayReloadResult(viewModel: MainPage.Reload.ViewModel)
    func displayFinalizeResult(viewModel: MainPage.Finalize.ViewModel)
}

class MainPageViewController: BaseViewController, MainPageDisplayLogic {
    
    var interactor: MainPageBusinessLogic?
    var router: (NSObjectProtocol & MainPageRoutingLogic & MainPageDataPassing)?

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()

    }
    // MARK: - Setup 

    private func setup() {
        let viewController = self
        let interactor = MainPageInteractor()
        let presenter = MainPagePresenter()
        let router = MainPageRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }


}

// MARK: - Display Logic

extension MainPageViewController {
    func displayInitializeResult(viewModel: MainPage.Initialize.ViewModel) {
            
    }
    
    func displayReloadResult(viewModel: MainPage.Reload.ViewModel) {
        
    }
    
    func displayFinalizeResult(viewModel: MainPage.Finalize.ViewModel) {
        
    }
}
